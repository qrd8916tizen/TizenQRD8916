diff --git a/init/devices.c b/init/devices.c
index f96bccb..9783baf 100644
--- a/init/devices.c
+++ b/init/devices.c
@@ -978,9 +978,12 @@ void device_init(void)
 
     if (stat(coldboot_done, &info) < 0) {
         t0 = get_usecs();
-        coldboot("/sys/class");
-        coldboot("/sys/block");
-        coldboot("/sys/devices");
+/*
+ *      coldboot("/sys/class");
+ *      coldboot("/sys/block");
+ *      coldboot("/sys/devices");
+ */
+	coldboot("/sys/devices/soc.0/7824900.sdhci");
         t1 = get_usecs();
         fd = open(coldboot_done, O_WRONLY|O_CREAT, 0000);
         close(fd);
diff --git a/init/init.c b/init/init.c
index e2b54b1..7ae1964 100644
--- a/init/init.c
+++ b/init/init.c
@@ -1005,7 +1005,7 @@ int main(int argc, char **argv)
          * Now that tmpfs is mounted on /dev, we can actually
          * talk to the outside world.
          */
-    open_devnull_stdio();
+   /*open_devnull_stdio();*/
     klog_init();
     property_init();
 
@@ -1033,7 +1033,7 @@ int main(int argc, char **argv)
     is_ffbm = !strncmp(bootmode, "ffbm", 4);
     if (!is_ffbm)
         is_charger = !strcmp(bootmode, "charger");
-
+    is_charger = false;
     INFO("property init\n");
     if (!is_charger)
         property_load_boot_defaults();
diff --git a/init/property_service.c b/init/property_service.c
index ae086a1..f5f9838 100644
--- a/init/property_service.c
+++ b/init/property_service.c
@@ -69,7 +69,7 @@
 #include "log.h"
 #include "vendor_init.h"
 
-#define PERSISTENT_PROPERTY_DIR  "/usr/lib/android/property"
+#define PERSISTENT_PROPERTY_DIR  "/system/property"
 
 static int persistent_properties_loaded = 0;
 static int property_area_inited = 0;
diff --git a/init/ueventd.c b/init/ueventd.c
index 53cc9ac..e3c4c2c 100644
--- a/init/ueventd.c
+++ b/init/ueventd.c
@@ -72,7 +72,7 @@ int ueventd_main(int argc, char **argv)
      */
     signal(SIGCHLD, SIG_IGN);
 
-    open_devnull_stdio();
+    /*open_devnull_stdio();*/
     klog_init();
 
     INFO("starting ueventd\n");
diff --git a/rootdir/init.rc b/rootdir/init.rc
index 1312d14..c0a968a 100644
--- a/rootdir/init.rc
+++ b/rootdir/init.rc
@@ -9,7 +9,7 @@
 
 import /init.environ.rc
 import /init.usb.rc
-import /init.${ro.hardware}.rc
+import /init.qcom.rc
 import /init.trace.rc
 
 on early-init
@@ -23,7 +23,7 @@ on early-init
     start ueventd
 
 # create mountpoints
-    mkdir /mnt 0775 root system
+    #mkdir /mnt 0775 root system
 
 on init
 
@@ -32,12 +32,12 @@ sysclktz 0
 loglevel 3
 
 # Backward compatibility
-    symlink /system/etc /etc
+    #symlink /system/etc /etc
     symlink /sys/kernel/debug /d
 
 # Right now vendor lives on the same filesystem as system,
 # but someday that may change.
-    symlink /system/vendor /vendor
+    #symlink /system/vendor /vendor
 
 # Create cgroup mount point for cpu accounting
     mkdir /acct
@@ -57,9 +57,9 @@ loglevel 3
     chown root system /sys/fs/cgroup/memory/sw/tasks
     chmod 0660 /sys/fs/cgroup/memory/sw/tasks
 
-    mkdir /system
-    mkdir /data 0771 system system
-    mkdir /cache 0770 system cache
+    #mkdir /system
+    #mkdir /data 0771 system system
+    #mkdir /cache 0770 system cache
     mkdir /config 0500 root root
 
     # See storage config details at http://source.android.com/tech/storage/
@@ -146,21 +146,21 @@ loglevel 3
 
 on post-fs
     # once everything is setup, no need to modify /
-    mount rootfs rootfs / ro remount
+    #mount rootfs rootfs / ro remount
     # mount shared so changes propagate into child namespaces
-    mount rootfs rootfs / shared rec
+    #mount rootfs rootfs / shared rec
 
     # We chown/chmod /cache again so because mount is run as root + defaults
-    chown system cache /cache
-    chmod 0770 /cache
+    #chown system cache /cache
+    #chmod 0770 /cache
     # We restorecon /cache in case the cache partition has been reset.
-    restorecon /cache
+    #restorecon /cache
 
     # This may have been created by the recovery system with odd permissions
-    chown system cache /cache/recovery
-    chmod 0770 /cache/recovery
+    #chown system cache /cache/recovery
+    #chmod 0770 /cache/recovery
     # This may have been created by the recovery system with the wrong context.
-    restorecon /cache/recovery
+    #restorecon /cache/recovery
 
     #change permissions on vmallocinfo so we can grab it from bugreports
     chown root log /proc/vmallocinfo
@@ -178,12 +178,12 @@ on post-fs
     chmod 0440 /proc/last_kmsg
 
     # create the lost+found directories, so as to enforce our permissions
-    mkdir /cache/lost+found 0770 root root
+    #mkdir /cache/lost+found 0770 root root
 
 on post-fs-data
     # We chown/chmod /data again so because mount is run as root + defaults
-    chown system system /data
-    chmod 0771 /data
+    #chown system system /data
+    #chmod 0771 /data
     # We restorecon /data in case the userdata partition has been reset.
     restorecon /data
 
@@ -420,7 +420,7 @@ on property:sys.sysctl.tcp_def_init_rwnd=*
 
 ## Daemon processes to be run by init.
 ##
-service ueventd /sbin/ueventd
+service ueventd /system/bin/ueventd
     class core
     critical
     seclabel u:r:ueventd:s0
@@ -460,16 +460,16 @@ service adbd /sbin/adbd
 on property:ro.kernel.qemu=1
     start adbd
 
-service servicemanager /system/bin/servicemanager
-    class core
-    user system
-    group system
-    critical
-    onrestart restart healthd
-    onrestart restart zygote
-    onrestart restart media
-    onrestart restart surfaceflinger
-    onrestart restart drm
+#service servicemanager /system/bin/servicemanager
+#    class core
+#    user system
+#    group system
+#    critical
+#    onrestart restart healthd
+#    onrestart restart zygote
+#    onrestart restart media
+#    onrestart restart surfaceflinger
+#    onrestart restart drm
 
 #service vold /system/bin/vold
 #    class core
